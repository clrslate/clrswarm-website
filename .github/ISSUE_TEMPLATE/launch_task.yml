bmFtZTogTGF1bmNoIFRhc2sKZGVzY3JpcHRpb246IFRyYWNrIGEgZGlzY3JldGUgbGF1bmNoIGRlbGl2ZXJhYmxlIGZvciBDbHJTd2FybSBzaXRlCmxhYmVsczogW10KYm9keToKICAtIHR5cGU6IGlucHV0CiAgICBpZDogc3VtbWFyeQogICAgYXR0cmlidXRlczoKICAgICAgbGFiZWw6IFRhc2sgU3VtbWFyeQogICAgICBwbGFjZWhvbGRlcjogZS5nLiBGaW5hbGl6ZSBob21lcGFnZSBjb3B5CiAgICB2YWxpZGF0aW9uczoKICAgICAgcmVxdWlyZWQ6IHRydWUKICAtIHR5cGU6IHRleHRhcmVhCiAgICBpZDogZGV0YWlscwogICAgYXR0cmlidXRlczoKICAgICAgbGFiZWw6IERldGFpbHMgLyBBY2NlcHRhbmNlIENyaXRlcmlhCiAgICAgIHBsYWNlaG9sZGVyOiB8CiAgICAgICAgRGVzY3JpYmUgc2NvcGUsIGRlZmluaXRpb24gb2YgZG9uZSwgbGlua3MgdG8gYXNzZXRzLCBldGMuCiAgICB2YWxpZGF0aW9uczogCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgLSB0eXBlOiBpbnB1dAogICAgaWQ6IG93bmVyCiAgICBhdHRyaWJ1dGVzOgogICAgICBsYWJlbDogT3duZXIgKEdpdEh1YiBoYW5kbGUpCiAgICAgIHBsYWNlaG9sZGVyOiBAdXNlcm5hbWUKICAtIHR5cGU6IGRyb3Bkb3duCiAgICBpZDogcHJpb3JpdHkKICAgIGF0dHJpYnV0ZXM6CiAgICAgIGxhYmVsOiBQcmlvcml0eQogICAgICBvcHRpb25zOgogICAgICAgIC0gUDAKICAgICAgICAtIFAxCiAgICAgICAgLSBQMgogICAgdmFsaWRhdGlvbnM6CiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgLSB0eXBlOiBpbnB1dAogICAgaWQ6IGR1ZQogICAgYXR0cmlidXRlczoKICAgICAgbGFiZWw6IFRhcmdldCBEYXRlIChZWVlZLU1NLUREKQogICAgICBwbGFjZWhvbGRlcjogMjAyNS0xMC0wNgogIC0gdHlwZTogY2hlY2tib3hlcwogICAgaWQ6IGNoZWNrCiAgICBhdHRyaWJ1dGVzOgogICAgICBsYWJlbDogUHJlLWZsaWdodCBDaGVja2xpc3QKICAgICAgb3B0aW9uczogCiAgICAgICAgLSBsYWJlbDogU2NvcGUgY2xlYXI KICAgICAgICAtIGxhYmVsOiBBc3NldHMgbGlua2VkCiAgICAgICAgLSBsYWJlbDogUmV2aWV3ZXJzIGlkZW50aWZpZWQKICAgICAgICAtIGxhYmVsOiBSb2xsYmFjayAoYWlmIGFwcGxpY2FibGUpCg==